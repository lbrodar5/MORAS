function Vector.new 1
push constant 2
call Memory.alloc 1
pop pointer 0
push constant 1
pop this 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 0
lt
not
if-goto WHILE_END0
push this 0
push constant 2
call Math.multiply 2
pop this 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 0
call Array.new 1
pop this 1
push pointer 0
return
function Vector.len 0
push argument 0
pop pointer 0
push this 0
return
function Vector.set 0
push argument 0
pop pointer 0
push argument 1
push this 1
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Vector.get 0
push argument 0
pop pointer 0
push argument 1
push this 1
add
pop pointer 1
push that 0
return
function Vector.resize 2
push argument 0
pop pointer 0
push constant 1
pop this 0
push argument 1
push constant 0
lt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 1
lt
not
if-goto WHILE_END0
push this 0
push constant 2
call Math.multiply 2
pop this 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE0
push this 0
call Array.new 1
pop local 1
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push this 0
lt
not
if-goto WHILE_END1
push local 0
push local 1
add
push local 0
push this 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push this 0
call Array.new 1
pop this 1
push constant 0
pop local 0
label WHILE_EXP2
push local 0
push this 0
lt
not
if-goto WHILE_END2
push local 0
push this 1
add
push local 0
push local 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
push local 1
call Array.dispose 1
pop temp 0
push constant 0
return
function Vector.is_eq 1
push argument 0
call Vector.len 1
push argument 1
call Vector.len 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 0
call Vector.len 1
lt
not
if-goto WHILE_END0
push argument 0
push local 0
call Vector.get 2
push argument 1
push local 0
call Vector.get 2
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
push constant 0
not
return
function Vector.elems 4
push argument 0
call Vector.len 1
pop local 2
push local 2
push argument 1
call Vector.len 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push local 2
lt
not
if-goto WHILE_END0
push constant 0
not
pop local 3
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push local 2
lt
not
if-goto WHILE_END1
push argument 0
push local 0
call Vector.get 2
push argument 1
push local 1
call Vector.get 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop local 3
label IF_FALSE1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 3
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
return
label IF_FALSE2
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
push constant 0
not
return
function Vector.dispose 0
push argument 0
pop pointer 0
push this 1
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAloc 1
pop temp 0
push constant 0
return
